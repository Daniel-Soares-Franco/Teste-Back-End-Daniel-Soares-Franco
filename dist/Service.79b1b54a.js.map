{"version":3,"sources":["build/randomNumberGenerator.js","build/Service.js"],"names":["_seed","Object","defineProperty","exports","value","checkRandomNumber","random","seed","validator","payload","numbers","x","Math","sin","floor","array","forEach","element","includes","toString","console","log","JSON","parse","_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","n","hasOwnProperty","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_createForOfIteratorHelper","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","_e","normalCompletion","err","didErr","step","_e2","minLen","_arrayLikeToArray","from","test","arr","len","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","rejected","result","apply","randomNumberGenerator_1","require","Service","number","_callee","newNumbers","list","_iterator","_step","text","_callee$","_context","Map","set","concat","get","join","document","getElementById","innerHTML","default"],"mappings":";AAAA,aAIA,IAAIA,EAHJC,OAAOC,eAAeC,QAAS,aAAc,CAAEC,OAAO,IACtDD,QAAQE,kBAAoBF,QAAQG,OAASH,QAAQI,UAAO,EAG5D,IAAIC,GAAY,EACZC,EAAU,GACVC,EAAU,CACV,qBACA,qBACA,qBACA,sBACA,qBACA,qBACA,qBACA,sBACA,sBAGJ,SAASH,EAAKA,GACVP,EAAQO,EAGZ,SAASD,IAEL,IAAMK,EAAwB,IAApBC,KAAKC,IAAIb,KAEnB,OAAOW,EAAIC,KAAKE,MAAMH,GAG1B,SAASN,EAAkBU,GAUvB,OATAA,EAAMC,QAAQ,SAACC,GAEXP,EAAQQ,SAASD,EAAQE,YACnBC,QAAQC,IAAI,UACXb,GAAY,IAGhBC,EADPD,EACiBc,KAAKC,MAAM,0BACXD,KAAKC,MAAM,wBAjBhCpB,QAAQI,KAAOA,EAOfJ,QAAQG,OAASA,EAajBH,QAAQE,kBAAoBA;;AC1C5B,aAAa,SAAAmB,EAAAC,GAAAD,OAAAA,EAAAE,mBAAAA,QAAAA,iBAAAA,OAAAC,SAAAF,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAC,mBAAAA,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAG,UAAAJ,gBAAAA,IAAAA,GAAA,SAAAK,IACbA,EAAAA,WAAAC,OAAAA,GAAAC,IAAAA,EAAAD,EAAAE,GAAAA,EAAAhC,OAAA4B,UAAAK,EAAAD,EAAAE,eAAAV,EAAAxB,OAAAC,gBAAA8B,SAAAA,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAA7B,OAAAgC,EAAAV,mBAAAA,OAAAA,OAAAW,GAAAA,EAAAD,EAAAT,UAAAW,aAAAA,EAAAF,EAAAG,eAAAC,kBAAAA,EAAAJ,EAAAK,aAAAC,gBAAAA,SAAAA,EAAAV,EAAAD,EAAAE,GAAAhC,OAAAA,OAAAC,eAAA8B,EAAAD,EAAA3B,CAAAA,MAAA6B,EAAAU,YAAAC,EAAAA,cAAAC,EAAAA,UAAAb,IAAAA,EAAAD,GAAAW,IAAAA,EAAAV,GAAAA,IAAAA,MAAAA,GAAAU,EAAAA,SAAAV,EAAAD,EAAAE,GAAAD,OAAAA,EAAAD,GAAAE,GAAAa,SAAAA,EAAAd,EAAAD,EAAAE,EAAAC,GAAAE,IAAAA,EAAAL,GAAAA,EAAAF,qBAAAkB,EAAAhB,EAAAgB,EAAAV,EAAApC,OAAA+C,OAAAZ,EAAAP,WAAAS,EAAAW,IAAAA,EAAAf,GAAAT,IAAAA,OAAAA,EAAAY,EAAAjC,UAAAA,CAAAA,MAAA8C,EAAAlB,EAAAC,EAAAK,KAAAD,EAAAc,SAAAA,EAAAnB,EAAAD,EAAAE,GAAAmB,IAAAA,MAAAA,CAAAA,KAAAC,SAAAA,IAAArB,EAAAsB,KAAAvB,EAAAE,IAAAD,MAAAA,GAAAoB,MAAAA,CAAAA,KAAAC,QAAAA,IAAArB,IAAAD,EAAAe,KAAAA,EAAAS,IAAAA,EAAAC,iBAAAA,EAAAC,iBAAAA,EAAAC,YAAAA,EAAAC,YAAAA,EAAAZ,GAAAA,SAAAA,KAAAa,SAAAA,KAAAC,SAAAA,KAAAC,IAAAA,EAAApB,GAAAA,EAAAoB,EAAAzB,EAAA0B,WAAAA,OAAAA,OAAAA,IAAAA,EAAA9D,OAAA+D,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAAD,MAAAA,GAAAA,IAAAhC,GAAAC,EAAAoB,KAAAW,EAAA5B,KAAAyB,EAAAG,GAAAE,IAAAA,EAAAN,EAAAhC,UAAAkB,EAAAlB,UAAA5B,OAAA+C,OAAAc,GAAAM,SAAAA,EAAApC,GAAAhB,CAAAA,OAAAA,QAAAA,UAAAA,QAAAe,SAAAA,GAAAW,EAAAV,EAAAD,EAAAC,SAAAA,GAAAqC,OAAAA,KAAAA,QAAAtC,EAAAC,OAAAsC,SAAAA,EAAAtC,EAAAD,GAAAwC,SAAAA,EAAAtC,EAAAR,EAAAW,EAAAC,GAAAC,IAAAA,EAAAa,EAAAnB,EAAAC,GAAAD,EAAAP,GAAAa,GAAAA,UAAAA,EAAAc,KAAAZ,CAAAA,IAAAA,EAAAF,EAAAe,IAAAE,EAAAf,EAAApC,MAAAmD,OAAAA,GAAA/B,UAAAA,EAAA+B,IAAArB,EAAAoB,KAAAC,EAAAxB,WAAAA,EAAAyC,QAAAjB,EAAAkB,SAAAC,KAAA1C,SAAAA,GAAAuC,EAAAvC,OAAAA,EAAAI,EAAAC,IAAAL,SAAAA,GAAAuC,EAAAvC,QAAAA,EAAAI,EAAAC,KAAAN,EAAAyC,QAAAjB,GAAAmB,KAAA1C,SAAAA,GAAAQ,EAAApC,MAAA4B,EAAAI,EAAAI,IAAAR,SAAAA,GAAAuC,OAAAA,EAAAvC,QAAAA,EAAAI,EAAAC,KAAAA,EAAAC,EAAAe,KAAApB,IAAAA,EAAAR,EAAArB,KAAAA,UAAAA,CAAAA,MAAAA,SAAA4B,EAAAE,GAAAyC,SAAAA,IAAA5C,OAAAA,IAAAA,EAAAA,SAAAA,EAAAE,GAAAsC,EAAAvC,EAAAE,EAAAH,EAAAE,KAAAA,OAAAA,EAAAA,EAAAA,EAAAyC,KAAAC,EAAAA,GAAAA,OAAAzB,SAAAA,EAAAnB,EAAAE,EAAAC,GAAAT,IAAAA,EAAA8B,EAAAnB,OAAAA,SAAAA,EAAAC,GAAAZ,GAAAA,IAAAgC,EAAAmB,MAAAA,IAAAA,MAAAnD,gCAAAA,GAAAA,IAAAiC,EAAAtB,CAAAA,GAAAA,UAAAA,EAAAC,MAAAA,EAAAjC,MAAAA,CAAAA,MAAA4B,EAAA6C,MAAA3C,GAAAA,IAAAA,EAAA4C,OAAA1C,EAAAF,EAAAmB,IAAAhB,IAAAC,CAAAA,IAAAA,EAAAJ,EAAA6C,SAAAzC,GAAAA,EAAAE,CAAAA,IAAAA,EAAAwC,EAAA1C,EAAAJ,GAAAM,GAAAA,EAAAA,CAAAA,GAAAA,IAAAmB,EAAAnB,SAAAA,OAAAA,GAAAN,GAAAA,SAAAA,EAAA4C,OAAA5C,EAAA+C,KAAA/C,EAAAgD,MAAAhD,EAAAmB,SAAAnB,GAAAA,UAAAA,EAAA4C,OAAArD,CAAAA,GAAAA,IAAA8B,EAAA9B,MAAAA,EAAAiC,EAAAxB,EAAAmB,IAAAnB,EAAAiD,kBAAAjD,EAAAmB,SAAAnB,WAAAA,EAAA4C,QAAA5C,EAAAkD,OAAAlD,SAAAA,EAAAmB,KAAA5B,EAAAgC,EAAAK,IAAAA,EAAAX,EAAApB,EAAAE,EAAAC,GAAA4B,GAAAA,WAAAA,EAAAV,KAAA3B,CAAAA,GAAAA,EAAAS,EAAA2C,KAAAnB,EAAAF,EAAAM,EAAAT,MAAAM,EAAAvD,SAAAA,MAAAA,CAAAA,MAAA0D,EAAAT,IAAAwB,KAAA3C,EAAA2C,MAAAf,UAAAA,EAAAV,OAAA3B,EAAAiC,EAAAxB,EAAA4C,OAAA5C,QAAAA,EAAAmB,IAAAS,EAAAT,OAAA2B,SAAAA,EAAAjD,EAAAE,GAAAC,IAAAA,EAAAD,EAAA6C,OAAArD,EAAAM,EAAAJ,SAAAO,GAAAT,GAAAA,IAAAO,EAAAC,OAAAA,EAAA8C,SAAA7C,KAAAA,UAAAA,GAAAH,EAAAJ,SAAA0D,SAAApD,EAAA6C,OAAA7C,SAAAA,EAAAoB,IAAArB,EAAAgD,EAAAjD,EAAAE,GAAAA,UAAAA,EAAA6C,SAAA5C,WAAAA,IAAAD,EAAA6C,OAAA7C,QAAAA,EAAAoB,IAAAiC,IAAAA,UAAApD,oCAAAA,EAAAyB,aAAAA,EAAAvB,IAAAA,EAAAe,EAAA1B,EAAAM,EAAAJ,SAAAM,EAAAoB,KAAAjB,GAAAA,UAAAA,EAAAgB,KAAAnB,OAAAA,EAAA6C,OAAA7C,QAAAA,EAAAoB,IAAAjB,EAAAiB,IAAApB,EAAA8C,SAAApB,KAAAA,EAAAtB,IAAAA,EAAAD,EAAAiB,IAAAhB,OAAAA,EAAAA,EAAAwC,MAAA5C,EAAAF,EAAAwD,YAAAlD,EAAAjC,MAAA6B,EAAAuD,KAAAzD,EAAA0D,QAAAxD,WAAAA,EAAA6C,SAAA7C,EAAA6C,OAAA7C,OAAAA,EAAAoB,IAAArB,GAAAC,EAAA8C,SAAApB,KAAAA,GAAAtB,GAAAJ,EAAA6C,OAAA7C,QAAAA,EAAAoB,IAAAiC,IAAAA,UAAArD,oCAAAA,EAAA8C,SAAApB,KAAAA,GAAA+B,SAAAA,EAAA1D,GAAAD,IAAAA,EAAA4D,CAAAA,OAAA3D,EAAAA,IAAAA,KAAAA,IAAAD,EAAA6D,SAAA5D,EAAAA,IAAAA,KAAAA,IAAAD,EAAA8D,WAAA7D,EAAAD,GAAAA,EAAA+D,SAAA9D,EAAA+D,IAAAA,KAAAA,WAAAC,KAAAjE,GAAAkE,SAAAA,EAAAjE,GAAAD,IAAAA,EAAAC,EAAAkE,YAAAnE,GAAAA,EAAAqB,KAAArB,gBAAAA,EAAAsB,IAAArB,EAAAkE,WAAAnE,EAAAkB,SAAAA,EAAAjB,GAAA+D,KAAAA,WAAAJ,CAAAA,CAAAA,OAAA3D,SAAAA,EAAAhB,QAAA0E,EAAAS,MAAAA,KAAAA,OAAAjC,GAAAA,SAAAA,EAAAnC,GAAAA,GAAAA,GAAAA,KAAAA,EAAAE,CAAAA,IAAAA,EAAAF,EAAAM,GAAAJ,GAAAA,EAAAA,OAAAA,EAAAqB,KAAAvB,GAAAA,GAAAA,mBAAAA,EAAAyD,KAAAzD,OAAAA,EAAAqE,IAAAA,MAAArE,EAAAsE,QAAA5E,CAAAA,IAAAA,GAAAW,EAAAA,EAAAoD,SAAAA,IAAA/D,OAAAA,EAAAM,EAAAsE,QAAAnE,GAAAA,EAAAoB,KAAAvB,EAAAN,GAAA+D,OAAAA,EAAApF,MAAA2B,EAAAN,GAAA+D,EAAAX,MAAAW,EAAAA,EAAAA,OAAAA,EAAApF,MAAA4B,EAAAwD,EAAAX,MAAAW,EAAAA,GAAApD,OAAAA,EAAAoD,KAAApD,GAAAkD,MAAAA,IAAAA,UAAA9D,EAAAO,GAAA6B,oBAAAA,OAAAA,EAAA/B,UAAAgC,EAAApC,EAAA0C,EAAA/D,cAAAA,CAAAA,MAAAyD,EAAAjB,cAAAnB,IAAAA,EAAAoC,EAAAzD,cAAAA,CAAAA,MAAAwD,EAAAhB,cAAAgB,IAAAA,EAAA0C,YAAA5D,EAAAmB,EAAArB,EAAAT,qBAAAA,EAAAwE,oBAAAvE,SAAAA,GAAAD,IAAAA,EAAAC,mBAAAA,GAAAA,EAAAJ,YAAAG,QAAAA,IAAAA,IAAA6B,GAAA7B,uBAAAA,EAAAuE,aAAAvE,EAAAyE,QAAAzE,EAAA0E,KAAAzE,SAAAA,GAAA/B,OAAAA,OAAAyG,eAAAzG,OAAAyG,eAAA1E,EAAA6B,IAAA7B,EAAA2E,UAAA9C,EAAAnB,EAAAV,EAAAQ,EAAAR,sBAAAA,EAAAH,UAAA5B,OAAA+C,OAAAmB,GAAAnC,GAAAD,EAAA6E,MAAA5E,SAAAA,GAAAyC,MAAAA,CAAAA,QAAAzC,IAAAoC,EAAAE,EAAAzC,WAAAa,EAAA4B,EAAAzC,UAAAS,EAAAP,WAAAA,OAAAA,OAAAA,EAAAuC,cAAAA,EAAAvC,EAAA8E,MAAA7E,SAAAA,EAAAC,EAAAC,EAAAT,EAAAW,QAAAA,IAAAA,IAAAA,EAAA0E,SAAAzE,IAAAA,EAAAiC,IAAAA,EAAAxB,EAAAd,EAAAC,EAAAC,EAAAT,GAAAW,GAAAL,OAAAA,EAAAwE,oBAAAtE,GAAAI,EAAAA,EAAAmD,OAAAd,KAAA1C,SAAAA,GAAAA,OAAAA,EAAA6C,KAAA7C,EAAA5B,MAAAiC,EAAAmD,UAAApB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAAE,aAAAA,EAAAyB,EAAA9B,EAAAK,WAAAA,OAAAA,OAAAA,EAAAyB,EAAApC,WAAAA,WAAAA,MAAAA,uBAAAA,EAAAgF,KAAA/E,SAAAA,GAAAD,IAAAA,EAAA9B,OAAA+B,GAAAC,EAAAC,GAAAA,IAAAA,IAAAA,KAAAH,EAAAE,EAAA+D,KAAA9D,GAAAD,OAAAA,EAAA+E,UAAAxB,SAAAA,IAAAvD,KAAAA,EAAAoE,QAAArE,CAAAA,IAAAA,EAAAC,EAAAgF,MAAAjF,GAAAA,KAAAD,EAAAyD,OAAAA,EAAApF,MAAA4B,EAAAwD,EAAAX,MAAAW,EAAAA,EAAAA,OAAAA,EAAAX,MAAAW,EAAAA,IAAAzD,EAAAmC,OAAAA,EAAAjB,EAAApB,UAAAD,CAAAA,YAAAqB,EAAAkD,MAAAA,SAAApE,GAAAmF,GAAAA,KAAAA,KAAA1B,EAAAA,KAAAA,KAAAP,EAAAA,KAAAA,KAAAC,KAAAA,MAAAlD,EAAA6C,KAAAA,MAAAE,EAAAA,KAAAA,SAAAD,KAAAA,KAAAA,OAAAzB,OAAAA,KAAAA,IAAArB,EAAA+D,KAAAA,WAAA/E,QAAAiF,IAAAlE,EAAAE,IAAAA,IAAAA,KAAAA,KAAAA,MAAAA,EAAAkF,OAAAjF,IAAAA,EAAAoB,KAAArB,KAAAA,KAAAmE,OAAAnE,EAAAmF,MAAAnF,MAAAA,KAAAA,GAAAD,IAAAqF,KAAAA,WAAAxC,KAAAA,MAAA7C,EAAAA,IAAAA,EAAA+D,KAAAA,WAAAG,GAAAA,WAAAlE,GAAAA,UAAAA,EAAAoB,KAAApB,MAAAA,EAAAqB,IAAAiE,OAAAA,KAAAA,MAAAnC,kBAAAA,SAAApD,GAAA8C,GAAAA,KAAAA,KAAA9C,MAAAA,EAAAE,IAAAA,EAAAsF,KAAAA,SAAAA,EAAArF,EAAAT,GAAAY,OAAAA,EAAAe,KAAAf,QAAAA,EAAAgB,IAAAtB,EAAAE,EAAAuD,KAAAtD,EAAAT,IAAAQ,EAAA6C,OAAA7C,OAAAA,EAAAoB,IAAArB,KAAAP,EAAAA,IAAAA,IAAAA,EAAAsE,KAAAA,WAAAM,OAAA5E,EAAAA,GAAAA,IAAAA,EAAAW,CAAAA,IAAAA,EAAA2D,KAAAA,WAAAtE,GAAAY,EAAAD,EAAA8D,WAAA9D,GAAAA,SAAAA,EAAAuD,OAAA4B,OAAAA,EAAAnF,OAAAA,GAAAA,EAAAuD,QAAAuB,KAAAA,KAAA5E,CAAAA,IAAAA,EAAAJ,EAAAoB,KAAAlB,EAAAI,YAAAA,EAAAN,EAAAoB,KAAAlB,EAAAE,cAAAA,GAAAA,GAAAE,EAAA0E,CAAAA,GAAAA,KAAAA,KAAA9E,EAAAwD,SAAA2B,OAAAA,EAAAnF,EAAAwD,UAAAsB,GAAAA,GAAAA,KAAAA,KAAA9E,EAAAyD,WAAA0B,OAAAA,EAAAnF,EAAAyD,iBAAAvD,GAAAA,GAAA4E,GAAAA,KAAAA,KAAA9E,EAAAwD,SAAA2B,OAAAA,EAAAnF,EAAAwD,UAAApD,OAAAA,CAAAA,IAAAA,EAAAoC,MAAAA,IAAAA,MAAAsC,0CAAAA,GAAAA,KAAAA,KAAA9E,EAAAyD,WAAA0B,OAAAA,EAAAnF,EAAAyD,gBAAAT,OAAAA,SAAApD,EAAAD,GAAAE,IAAAA,IAAAA,EAAA8D,KAAAA,WAAAM,OAAApE,EAAAA,GAAAA,IAAAA,EAAAR,CAAAA,IAAAA,EAAAsE,KAAAA,WAAA9D,GAAAR,GAAAA,EAAAkE,QAAAuB,KAAAA,MAAAhF,EAAAoB,KAAA7B,EAAAyF,eAAAA,KAAAA,KAAAzF,EAAAoE,WAAAzD,CAAAA,IAAAA,EAAAX,EAAAW,OAAAA,IAAAJ,UAAAA,GAAAA,aAAAA,IAAAI,EAAAuD,QAAA5D,GAAAA,GAAAK,EAAAyD,aAAAzD,EAAAC,MAAAA,IAAAA,EAAAD,EAAAA,EAAA8D,WAAA7D,GAAAA,OAAAA,EAAAe,KAAApB,EAAAK,EAAAgB,IAAAtB,EAAAK,GAAA0C,KAAAA,OAAAU,OAAAA,KAAAA,KAAApD,EAAAyD,WAAAlC,GAAA6D,KAAAA,SAAAnF,IAAAmF,SAAAA,SAAAxF,EAAAD,GAAAC,GAAAA,UAAAA,EAAAoB,KAAApB,MAAAA,EAAAqB,IAAArB,MAAAA,UAAAA,EAAAoB,MAAApB,aAAAA,EAAAoB,KAAAoC,KAAAA,KAAAxD,EAAAqB,IAAArB,WAAAA,EAAAoB,MAAAkE,KAAAA,KAAAjE,KAAAA,IAAArB,EAAAqB,IAAAyB,KAAAA,OAAAU,SAAAA,KAAAA,KAAAxD,OAAAA,WAAAA,EAAAoB,MAAArB,IAAAyD,KAAAA,KAAAzD,GAAA4B,GAAA8D,OAAAA,SAAAzF,GAAAD,IAAAA,IAAAA,EAAAgE,KAAAA,WAAAM,OAAAtE,EAAAA,GAAAA,IAAAA,EAAAE,CAAAA,IAAAA,EAAA8D,KAAAA,WAAAhE,GAAAE,GAAAA,EAAA4D,aAAA7D,EAAAwF,OAAAA,KAAAA,SAAAvF,EAAAiE,WAAAjE,EAAA6D,UAAAG,EAAAhE,GAAA0B,IAAA+D,MAAAC,SAAA3F,GAAAD,IAAAA,IAAAA,EAAAgE,KAAAA,WAAAM,OAAAtE,EAAAA,GAAAA,IAAAA,EAAAE,CAAAA,IAAAA,EAAA8D,KAAAA,WAAAhE,GAAAE,GAAAA,EAAA0D,SAAA3D,EAAAE,CAAAA,IAAAA,EAAAD,EAAAiE,WAAAhE,GAAAA,UAAAA,EAAAkB,KAAA3B,CAAAA,IAAAA,EAAAS,EAAAmB,IAAA4C,EAAAhE,GAAAR,OAAAA,GAAAmD,MAAAA,IAAAA,MAAAgD,0BAAAA,cAAAA,SAAA7F,EAAAE,EAAAC,GAAA6C,OAAAA,KAAAA,SAAApD,CAAAA,SAAAuC,EAAAnC,GAAAwD,WAAAtD,EAAAwD,QAAAvD,GAAA4C,SAAAA,KAAAA,SAAAzB,KAAAA,IAAArB,GAAA2B,IAAA5B,EAAA,SAAA8F,EAAApG,EAAAqG,GAAAC,IAAAA,EAAAtG,oBAAAC,QAAAD,EAAAC,OAAAC,WAAAF,EAAAsG,cAAAA,IAAAA,EAAAC,CAAAA,GAAAA,MAAAC,QAAAxG,KAAAsG,EAAAG,EAAAzG,KAAAqG,GAAArG,GAAAsG,iBAAAtG,EAAA4E,OAAA0B,CAAAA,IAAAtG,EAAAsG,GAAA3F,IAAAA,EAAA+F,EAAAA,EAAAA,aAAAzE,MAAAA,CAAAA,EAAAyE,EAAAjG,EAAAA,WAAAE,OAAAA,GAAAX,EAAA4E,OAAAxB,CAAAA,MAAAA,GAAAA,CAAAA,MAAAzE,EAAAA,MAAAqB,EAAAW,OAAAL,EAAAA,SAAAqG,GAAAA,MAAAA,GAAA3E,EAAA0E,GAAA7C,MAAAA,IAAAA,UAAA+C,yIAAAA,IAAAC,EAAAD,GAAAE,EAAAA,GAAAD,EAAA5E,MAAAA,CAAAA,EAAAA,WAAAqE,EAAAA,EAAAzE,KAAA7B,IAAAS,EAAAA,WAAAsG,IAAAA,EAAAT,EAAAvC,OAAAgD,OAAAH,EAAAG,EAAA3D,KAAA2D,GAAAzG,EAAAA,SAAA0G,GAAAF,GAAAD,EAAAA,EAAAG,GAAAhF,EAAAA,WAAA4E,IAAAA,GAAAN,MAAAA,EAAA1C,QAAA0C,EAAA1C,SAAAkD,QAAAA,GAAAA,EAAAD,MAAAA,KAAA,SAAAJ,EAAAzG,EAAAiH,GAAAjH,GAAAA,EAAAA,CAAAA,GAAAkH,iBAAAlH,EAAAkH,OAAAA,EAAAlH,EAAAiH,GAAAxG,IAAAA,EAAAjC,OAAA4B,UAAAV,SAAAmC,KAAA7B,GAAA2F,MAAAlF,GAAAA,GAAAA,MAAAT,WAAAS,GAAAT,EAAAG,cAAAM,EAAAT,EAAAG,YAAA4E,MAAAtE,QAAAA,GAAA8F,QAAA9F,EAAA8F,MAAAY,KAAAnH,GAAAoH,cAAA3G,GAAA2G,2CAAAA,KAAA3G,GAAAyG,EAAAlH,EAAAiH,QAAAxG,GAAA,SAAAyG,EAAAG,EAAAC,IAAAA,MAAAA,GAAAA,EAAAD,EAAAzC,UAAA0C,EAAAD,EAAAzC,QAAAjE,IAAAA,IAAAA,EAAA4G,EAAAA,EAAAhB,IAAAA,MAAAe,GAAA3G,EAAA2G,EAAA3G,IAAA4G,EAAA5G,GAAA0G,EAAA1G,GAAA4G,OAAAA,EAAA,SAAAC,EAAAC,EAAAC,GAAAD,KAAAA,aAAAC,GAAA7D,MAAAA,IAAAA,UAAA,qCAAA,SAAA8D,EAAAC,EAAAC,GAAAlH,IAAAA,IAAAA,EAAAA,EAAAA,EAAAkH,EAAAjD,OAAAjE,IAAAmH,CAAAA,IAAAA,EAAAD,EAAAlH,GAAAmH,EAAA5G,WAAA4G,EAAA5G,aAAA4G,EAAAA,EAAA3G,cAAA2G,EAAAA,UAAAA,IAAAA,EAAA1G,UAAA5C,GAAAA,OAAAC,eAAAmJ,EAAAG,EAAAD,EAAAE,KAAAF,IAAA,SAAAG,EAAAP,EAAAQ,EAAAC,GAAAT,OAAAQ,GAAAP,EAAAD,EAAAtH,UAAA8H,GAAAC,GAAAR,EAAAD,EAAAS,GAAA3J,OAAAC,eAAAiJ,EAAAtG,YAAAA,CAAAA,UAAAsG,IAAAA,EAAA,SAAAK,EAAAxH,GAAAI,IAAAA,EAAAyH,EAAA7H,EAAAR,UAAAA,MAAAA,UAAAA,EAAAY,GAAAA,EAAA0H,OAAA1H,GAAA,SAAAyH,EAAA7H,EAAAC,GAAAT,GAAAA,UAAAA,EAAAQ,KAAAA,EAAAA,OAAAA,EAAAD,IAAAA,EAAAC,EAAAN,OAAAqI,aAAAhI,QAAAA,IAAAA,EAAAK,CAAAA,IAAAA,EAAAL,EAAAuB,KAAAtB,EAAAC,GAAAT,WAAAA,GAAAA,UAAAA,EAAAY,GAAAA,OAAAA,EAAAkD,MAAAA,IAAAA,UAAArD,gDAAAA,OAAAA,WAAAA,EAAA6H,OAAAE,QAAAhI,GAAA,IAAIiI,EAAa,MAAQ,KAAKA,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAItD,UAAU,SAAUtC,EAAS8F,GAC/C,SAASC,EAAUnK,GAAS,IAAMoI,EAAK6B,EAAU7E,KAAKpF,IAAW,MAAO2B,GAAKuI,EAAOvI,IACpF,SAASyI,EAASpK,GAAS,IAAMoI,EAAK6B,EAAiB,MAAEjK,IAAW,MAAO2B,GAAKuI,EAAOvI,IACvF,SAASyG,EAAKiC,GAJlB,IAAerK,EAIaqK,EAAO5F,KAAOL,EAAQiG,EAAOrK,QAJ1CA,EAIyDqK,EAAOrK,MAJhDA,aAAiBgK,EAAIhK,EAAQ,IAAIgK,EAAE,SAAU5F,GAAWA,EAAQpE,MAITsE,KAAK6F,EAAWC,GAClGhC,GAAM6B,EAAYA,EAAUK,MAAMR,EAASC,GAAc,KAAK3E,WAGtEvF,OAAOC,eAAeC,QAAS,aAAc,CAAEC,OAAO,IA0BtD,IAAMuK,EAA0BC,QAAQ,2BAClCC,EAAO,WACT,SAAAA,IAAc5B,EAAA4B,KAAAA,GAMb,OANgBnB,EAAAmB,EAAA,CAAA,CAAApB,IAAA,wBAAArJ,MAOjB,SAAsB0K,GAClB,OAAOb,EAAU,UAAM,OAAQ,EAAMnI,IAAA2E,KAAE,SAAAsE,IAAA,IAAAC,EAAA5I,EAAA6I,EAAAC,EAAAC,EAAAxK,EAAAyK,EAAAtH,EAAA,OAAAhC,IAAAgB,KAAAuI,SAAAC,GAAA,OAAAA,OAAAA,EAAApE,KAAAoE,EAAA9F,MAAA,KAAA,EAEnC,IADMwF,EAAa,IAAIO,IAAI,IAClBnJ,EAAI,EAAGA,EAAI,EAAGA,KACnB,EAAIuI,EAAwBpK,MAAMuK,EAAS1I,GAC3C4I,EAAWQ,IAAIpJ,GAAG,EAAIuI,EAAwBrK,WAE9C2K,EAAO,GAAEC,EAAArD,EACGmD,EAAWjE,QAAM,IAAjC,IAAAmE,EAAAxH,MAAAyH,EAAAD,EAAAhJ,KAAA2C,MAAWlE,EAACwK,EAAA/K,MACR6K,EAAKjF,KAAIyF,GAAAA,OAAIT,EAAWU,IAAI/K,KAC/B2H,MAAAA,GAAA4C,EAAAnJ,EAAAuG,GAAA,QAAA4C,EAAAzH,IAEsC,GADnC2H,EAAOH,EAAKU,KAAQ,OACpB7H,EAAI8H,SAASC,eAAe,SAC3B,CAAAP,EAAA9F,KAAA,GAAA,MACD1B,EAAEgI,UAAYV,EAAKE,EAAA9F,KAAA,GAAA,MAAA,KAAA,GAAA,OAAA8F,EAAAlG,OAGZgG,SAAAA,GAAI,KAAA,GAAA,IAAA,MAAA,OAAAE,EAAAjE,SAAA0D,SAGtB,CAAA,CAAAtB,IAAA,WAAArJ,MA1BD,WAII,OAHKyK,EAAQ3B,WACT2B,EAAQ3B,SAAW,IAAI2B,GAEpBA,EAAQ3B,aAClB2B,EAPQ,GA8Bb1K,QAAQ4L,QAAUlB","file":"Service.79b1b54a.js","sourceRoot":"..","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkRandomNumber = exports.random = exports.seed = void 0;\n//Definindo as variáveis que serão utilizadas\nlet _seed;\nlet validator = true;\nlet payload = {};\nlet numbers = [\n    \"0.3156106622882362\",\n    \"0.5513213466665547\",\n    \"0.3301843000590452\",\n    \"0.04769233684601204\",\n    \"0.4450511749319048\",\n    \"0.8014283726497524\",\n    \"0.6599671903586568\",\n    \"0.39207733233979525\",\n    \"0.9243979984480575\",\n];\n//Atribuindo à variável _seed, já definida, um valor que foi passado como atributo da função\nfunction seed(seed) {\n    _seed = seed;\n}\nexports.seed = seed;\nfunction random() {\n    //Determinando o seno da seed passada pelo usuário e a multiplicando por 10000\n    const x = Math.sin(_seed++) * 10000;\n    //Subtraindo do valor de X a sua parte inteira, deixando apenas as casas depois da vírgula, e retornando ao usuário\n    return x - Math.floor(x);\n}\nexports.random = random;\nfunction checkRandomNumber(array) {\n    array.forEach((element) => {\n        //Iterando cada valor do array enviado como atributo da função\n        numbers.includes(element.toString()) //Verificando se determinado elemento do array está em numbers\n            ? console.log(\"equals\") //Se o elemento estiver em Numbers ele imprime \"equals\" no console\n            : (validator = false); //Se o elemento não estiver em Numbers ele define a variável validator como falsa\n    });\n    validator //Verificando o valor de validator\n        ? (payload = JSON.parse('{ \"status\": \"success\"}')) //Se for verdadeira a variável payload recebe um objeto com a propriedade \"status\" definida como \"success\"\n        : (payload = JSON.parse('{ \"status\": \"error\"}')); //Se for falsa a variável payload recebe um objeto com a propriedade \"status\" definida como \"error\"\n    return payload; //Retorna o valor de payload\n}\nexports.checkRandomNumber = checkRandomNumber;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Using the provided random number generator function implementation,\n * along with the given seed,\n * you should:\n * - Import random and seed from randomNumberGenerator ok\n * - Use this function value as default: seed(192837465); ok\n * - Instantiate a Map class ok\n * - Iterate 9 times, from 0 to 8 ok\n * - On each iteration save the index as a key on the Map instance and as a value call the random function ok\n * - Iterate through the Map's keys using the \"keys\" method ok\n * - For each key, print it's associated value on the Map instance. ok\n * - Comment randomNumberGenerator.js code ok\n * - Output:\n *  0.3156106622882362\n    0.5513213466665547\n    0.3301843000590452\n    0.04769233684601204\n    0.4450511749319048\n    0.8014283726497524\n    0.6599671903586568\n    0.39207733233979525\n    0.9243979984480575\n \n  - YOUR CODE:\n*/\nconst randomNumberGenerator_1 = require(\"./randomNumberGenerator\");\nclass Service {\n    constructor() { }\n    static Instance() {\n        if (!Service.instance) {\n            Service.instance = new Service();\n        }\n        return Service.instance;\n    }\n    generateRandomNumbers(number) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const newNumbers = new Map([]);\n            for (let i = 0; i < 9; i++) {\n                (0, randomNumberGenerator_1.seed)(number + i);\n                newNumbers.set(i, (0, randomNumberGenerator_1.random)());\n            }\n            let list = [];\n            for (const x of newNumbers.keys()) {\n                list.push(`${newNumbers.get(x)}`);\n            }\n            let text = list.join(` `);\n            let p = document.getElementById(\"demo\");\n            if (p) {\n                p.innerHTML = text;\n            }\n            else {\n                return text;\n            }\n        });\n    }\n}\nexports.default = Service;\n"]}